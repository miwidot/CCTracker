name: Build - Main Branch Validation

on:
  push:
    branches: [main]

env:
  NODE_VERSION: '20'

jobs:
  prepare:
    name: Prepare Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Get version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=${VERSION}-dev.${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

  build-mac-dmg:
    name: Build macOS DMG
    runs-on: macos-latest
    needs: prepare
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Package macOS DMG
        run: npm run package:mac:dmg
        
      - name: Upload DMG artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg-${{ needs.prepare.outputs.version }}
          path: |
            dist/*.dmg
          retention-days: 7

  build-mac-zip:
    name: Build macOS ZIP (Auto-updater)
    runs-on: macos-latest
    needs: prepare
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Package macOS ZIP
        run: npm run package:mac:zip
        
        
      - name: Upload ZIP artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-zip-${{ needs.prepare.outputs.version }}
          path: |
            dist/*.zip
            dist/*.blockmap
          retention-days: 7

  build-linux-deb:
    name: Build Linux DEB
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm-dev libxcomposite-dev libxdamage-dev libxrandr-dev libgbm-dev libxss1 libasound2-dev
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Package Linux DEB
        run: npm run package:linux:deb
        
        
      - name: Upload DEB artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-deb-${{ needs.prepare.outputs.version }}
          path: |
            dist/*.deb
          retention-days: 7

  build-linux-tar:
    name: Build Linux TAR.GZ
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm-dev libxcomposite-dev libxdamage-dev libxrandr-dev libgbm-dev libxss1 libasound2-dev
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Package Linux TAR.GZ
        run: npm run package:linux:tar
        
      - name: Upload TAR.GZ artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-tar-${{ needs.prepare.outputs.version }}
          path: |
            dist/*.tar.gz
          retention-days: 7